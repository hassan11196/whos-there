// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.187.0/containers/python-3
{
    "name": "Python 3",
    "build": {
        "dockerfile": "Dockerfile",
        "context": "..",
        "args": {
            // Update 'VARIANT' to pick a Python version: 3, 3.6, 3.7, 3.8, 3.9, 3.10
            "VARIANT": "3.8",
            // Options
            "INSTALL_NODE": "true",
            "NODE_VERSION": "lts/*"
        },
    },
    "remoteEnv": {
        "PATH": "${containerEnv:PATH}:/home/vscode/.local/bin"
    },
    "runArgs": [
        //"--gpus=all",
        "--shm-size=2gb"
    ],
    // Set *default* container specific settings.json values on container create.
    "settings": {
        "editor.tabSize": 4,
        "editor.renderWhitespace": "all",
        "editor.formatOnPaste": false,
        "editor.formatOnSave": true,
        "editor.rulers": [
            120
        ],
        "python.pythonPath": "/usr/local/bin/python",
        "python.defaultInterpreterPath": "/usr/local/bin/python",
        "python.languageServer": "Pylance",
        "python.autoComplete.addBrackets": true,
        "python.analysis.autoImportCompletions": true,
        "python.analysis.completeFunctionParens": true,
        "python.analysis.autoSearchPaths": true,
        "python.analysis.useImportHeuristic": true,
        "python.analysis.extraPaths": [
            "whos_there",
        ],
        "python.analysis.typeCheckingMode": "off",
        "python.sortImports": true,
        "python.sortImports.args": [
            "--src=${workspaceFolder}",
            "--profile",
            "black",
            "--atomic",
            "--py",
            "37",
            "--line-length",
            "120"
        ],
        "python.formatting.autopep8Path": "/usr/local/py-utils/bin/autopep8",
        "python.formatting.blackPath": "/usr/local/py-utils/bin/black",
        "python.formatting.yapfPath": "/usr/local/py-utils/bin/yapf",
        "python.formatting.provider": "black",
        "python.formatting.blackArgs": [
            "--line-length=120"
        ],
        "python.linting.banditPath": "/usr/local/py-utils/bin/bandit",
        "python.linting.flake8Path": "/usr/local/py-utils/bin/flake8",
        "python.linting.mypyPath": "/usr/local/py-utils/bin/mypy",
        "python.linting.pycodestylePath": "/usr/local/py-utils/bin/pycodestyle",
        "python.linting.pydocstylePath": "/usr/local/py-utils/bin/pydocstyle",
        "python.linting.pylintPath": "/usr/local/py-utils/bin/pylint",
        "python.linting.enabled": true,
        "python.linting.pylintEnabled": false,
        "python.linting.flake8Enabled": true,
        "python.linting.flake8Args": [
            "--ignore=E24,W504,F401,E203,W503",
            "--max-line-length=120",
            "--verbose",
            "--docstring-convention=google"
        ],
        "python.testing.autoTestDiscoverOnSaveEnabled": false,
        "python.testing.pytestEnabled": true,
        "python.testing.cwd": "./tests",
        "python.testing.pytestArgs": [
            "-v",
        ],
        "[python]": {
            "editor.codeActionsOnSave": {
                "source.organizeImports": true
            }
        },
        "testExplorer.codeLens": true,
        "testExplorer.gutterDecoration": true,
        "autoDocstring.docstringFormat": "google",
        "autoDocstring.customTemplatePath": "google-notypes.mustache",
        "autoDocstring.startOnNewLine": true,
        "autoDocstring.guessTypes": true,
        "autoDocstring.generateDocstringOnEnter": true,
    },
    // Add the IDs of extensions you want installed when the container is created.
    "extensions": [
        "ms-python.python",
        "ms-python.vscode-pylance",
        "ms-toolsai.jupyter",
        "ms-vscode.test-adapter-converter",
        "littlefoxteam.vscode-python-test-adapter",
        "kevinrose.vsc-python-indent",
        "medo64.render-crlf",
        "visualstudioexptteam.vscodeintellicode",
        "shardulm94.trailing-spaces",
        "ms-vscode-remote.vscode-remote-extensionpack",
        "njqdev.vscode-python-typehint",
        "gruntfuggly.todo-tree",
        "njpwerner.autodocstring",
        "nhoizey.gremlins",
    ],
    // Use 'forwardPorts' to make a list of ports inside the container available locally.
    // "forwardPorts": [],
    // Use 'postCreateCommand' to run commands after the container is created.
    "postCreateCommand": "poetry install && pre-commit install",
    // Comment out connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
    "remoteUser": "vscode"
}